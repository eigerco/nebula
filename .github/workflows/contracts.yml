name: Build and test contracts

on:
  push:
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        contract: [raffle, voting, governance, marketplace]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: 1-${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-build

      - name: Prepare target
        run: rustup target add wasm32-unknown-unknown

      - name: Build specific contracts dependencies
        run: cargo build -p voting --release --target wasm32-unknown-unknown --verbose

      - name: Build
        run: cargo build -p ${{ matrix.contract }} --release --target wasm32-unknown-unknown --verbose

      - name: Lint
        run: cargo clippy -p ${{ matrix.contract }} --all-targets --all-features

      - name: Upload compiled contracts
        uses: actions/upload-artifact@v3
        with:
          name: wasm-files-${{ matrix.contract }}
          path: target/wasm32-unknown-unknown/release/${{ matrix.contract }}.wasm

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        contract: [raffle, voting, governance, marketplace]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: 1-${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-build

      - name: Install cargo make
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-make
          version: "^0.36.13"

      - name: Install soroban-cli
        uses: baptiste0928/cargo-install@v2
        with:
          crate: soroban-cli
          version: "^20.0.0-rc2"
      
      - name: Download wasm-files
        uses: actions/download-artifact@v3
        with:
          name: wasm-files-${{ matrix.contract }}
          path: target/wasm32-unknown-unknown/release/

      - name: Test
        run: cargo test -p ${{ matrix.contract }}

      - name: Integration test
        working-directory: contracts/${{ matrix.contract }}
        run: cargo make run_test
